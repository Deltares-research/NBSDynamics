name: Bump version
on: [push]
# on:
#   push:
#     branches:
#       - master

jobs:
  bump-version:
    if: "!startsWith(github.event.head_commit.message, 'bump:')"
    runs-on: ubuntu-latest
    name: "Bump version and create changelog with commitizen"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.8
      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: venv-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            venv-${{ matrix.os }}-${{ matrix.python-version }}-

      - name: Set Poetry config
        run: |
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'
      
      - name: Verify github tags
        run: |
          git config --global user.name '${{ github.actor }}'
          git config --global user.email '${{ github.actor }}@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git checkout $GITHUB_HEAD_REF
          git fetch --all --tags
          git tag
          current_tag=$(git describe --tags)
          echo $current_tag

      # - name: Create bump and changelog
      #   uses: commitizen-tools/commitizen-action@master
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create bump and changelog
        run: |
          poetry run cz bump --changelog

      - name: Push changelog, version files and new tag
        run: |
          new_tag=$(git describe --tags)
          echo $new_tag
          git config --global user.name '${{ github.actor }}'
          git config --global user.email '${{ github.actor }}@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY          
          git checkout -b tag/$new_tag
          git merge $GITHUB_HEAD_REF
          git push -u $GITHUB_HEAD_REF tag/$new_tag --force
          git push --tags --force
